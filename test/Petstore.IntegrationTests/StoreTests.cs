/*
 * 
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc.Testing;

namespace Petstore.Tests
{ 
    using Xunit;
    using GeneratedCode.Models;
    using GeneratedCode.Interfaces;

    /// <summary>
    /// store API
    /// </summary>
    public class StoreTests : IClassFixture<WebApplicationFactory<Startup>>
    {
        private readonly WebApplicationFactory<Startup> _factory;
        public StoreTests(WebApplicationFactory<Startup> factory)
        {
            _factory = factory;
        }

        /// <summary>
        /// Returns pet inventories by status
        /// </summary>  
        /// <remarks>Returns a map of status codes to quantities</remarks>
        /// <response code="200">successful operation</response>
        //public async Task getInventoryTest()
        [Fact]
        public async Task getInventoryTest()
        { 
            var client = _factory.CreateClient();
            var url = $"/store/inventory";

            // todo:  implement
            // var response = await client.GetAsync(url);
            // response.EnsureSuccessStatusCode();

            throw new NotImplementedException("The test is not yet implemented");
        }

        /// <summary>
        /// Place an order for a pet
        /// </summary>  
        /// <param name="orderItem">order placed for purchasing the pet</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Invalid Order</response>
        //public async Task placeOrderTest(Order orderItem)

        [Theory]
        [InlineData(default(Order))]
        public async Task placeOrderTest(Order orderItem)
        { 
            var client = _factory.CreateClient();
            var url = $"/store/order";

            // todo:  implement
            // var response = await client.GetAsync(url);
            // response.EnsureSuccessStatusCode();

            throw new NotImplementedException("The test is not yet implemented");
        }

        /// <summary>
        /// Find purchase order by ID
        /// </summary>  
        /// <remarks>For valid response try integer IDs with value &gt;= 1 and &lt;= 10. Other values will generated exceptions</remarks>
        /// <param name="orderId">ID of pet that needs to be fetched</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">Order not found</response>
        //public async Task getOrderByIdTest(int orderId)

        [Theory]
        [InlineData(default(int))]
        public async Task getOrderByIdTest(int orderId)
        { 
            var client = _factory.CreateClient();
            var url = $"/store/order/{orderId}";

            // todo:  implement
            // var response = await client.GetAsync(url);
            // response.EnsureSuccessStatusCode();

            throw new NotImplementedException("The test is not yet implemented");
        }

        /// <summary>
        /// Delete purchase order by ID
        /// </summary>  
        /// <remarks>For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors</remarks>
        /// <param name="orderId">ID of the order that needs to be deleted</param>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">Order not found</response>
        //public async Task deleteOrderTest(int orderId)

        [Theory]
        [InlineData(default(int))]
        public async Task deleteOrderTest(int orderId)
        { 
            var client = _factory.CreateClient();
            var url = $"/store/order/{orderId}";

            // todo:  implement
            // var response = await client.GetAsync(url);
            // response.EnsureSuccessStatusCode();

            throw new NotImplementedException("The test is not yet implemented");
        }
    }
}
