/*
 * 
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace Petstore.GeneratedCode.Interfaces
{ 
    using Models;

    /// <summary>
    /// pet API
    /// </summary>
    [Description("pet API")]
    public interface IPetController
    { 
        /// <summary>
        /// Add a new pet to the store
        /// </summary>
        /// <param name="petItem">Pet object that needs to be added to the store</param>
        /// <response code="405">Invalid input</response>
        IActionResult addPet(Pet petItem);
        
        /// <summary>
        /// Update an existing pet
        /// </summary>
        /// <param name="petItem">Pet object that needs to be added to the store</param>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">Pet not found</response>
        /// <response code="405">Validation exception</response>
        IActionResult updatePet(Pet petItem);
        
        /// <summary>
        /// Finds Pets by status
        /// </summary>
        /// <remarks>Multiple status values can be provided with comma separated strings</remarks>
        /// <param name="status">Status values that need to be considered for filter</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Invalid status value</response>
        IActionResult findPetsByStatus(HashSet<PetStatusEnum> status);
        
        /// <summary>
        /// Finds Pets by tags
        /// </summary>
        /// <remarks>Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.</remarks>
        /// <param name="tags">Tags to filter by</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Invalid tag value</response>
        IActionResult findPetsByTags(List<string> tags);
        
        /// <summary>
        /// Find pet by ID
        /// </summary>
        /// <remarks>Returns a single pet</remarks>
        /// <param name="petId">ID of pet to return</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">Pet not found</response>
        IActionResult getPetById(int petId);
        
        /// <summary>
        /// Updates a pet in the store with form data
        /// </summary>
        /// <param name="petId">ID of pet that needs to be updated</param>
        /// <param name="name">Updated name of the pet</param>
        /// <param name="status">Updated status of the pet</param>
        /// <response code="405">Invalid input</response>
        IActionResult updatePetWithForm(int petId, string name, string status);
        
        /// <summary>
        /// Deletes a pet
        /// </summary>
        /// <param name="api_key">pet API</param>
        /// <param name="petId">Pet id to delete</param>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">Pet not found</response>
        IActionResult deletePet(string api_key, int petId);
        
        /// <summary>
        /// uploads an image
        /// </summary>
        /// <param name="petId">ID of pet to update</param>
        /// <param name="additionalMetadata">Additional data to pass to server</param>
        /// <param name="file">file to upload</param>
        /// <response code="200">successful operation</response>
        IActionResult uploadFile(int petId, string additionalMetadata, IFormFile file);    }
}
